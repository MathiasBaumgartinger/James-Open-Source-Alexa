{
  "config": {
    "ignore_stop_words": true,
    "max_pattern_length": 1000,
    "max_queries": 500,
    "unit_name": "deterministic_intent_parser"
  },
  "group_names_to_slot_names": {
    "group0": "room",
    "group1": "weatherDate",
    "group2": "weatherLocation"
  },
  "language_code": "en",
  "patterns": {
    "sampleGetWeather": [
      "^\\s*give\\s*weather\\s*forecast\\s*for\\s*(?P<group2>%LOCATION%)\\s*(?P<group1>%SNIPSDATETIME%)\\s*$",
      "^\\s*what\\s*kind\\s*of\\s*weather\\s*should\\s*i\\s*expect\\s*(?P<group1>%SNIPSDATETIME%)\\s*in\\s*(?P<group2>%LOCATION%)\\s*$",
      "^\\s*will\\s*it\\s*be\\s*sunny\\s*in\\s*(?P<group2>%LOCATION%)\\s*(?P<group1>%SNIPSDATETIME%)\\s*$",
      "^\\s*what\\s*will\\s*be\\s*weather\\s*in\\s*(?P<group2>%LOCATION%)\\s*(?P<group1>%SNIPSDATETIME%)\\s*$",
      "^\\s*tell\\s*if\\s*it\\s*is\\s*going\\s*rain\\s*(?P<group1>%SNIPSDATETIME%)\\s*in\\s*(?P<group2>%LOCATION%)\\s*$",
      "^\\s*what\\s*is\\s*weather\\s*in\\s*(?P<group2>%LOCATION%)\\s*$"
    ],
    "sampleTurnOnLight": [
      "^\\s*(?P<group0>%ROOM%)\\s*is\\s*dark\\s*turn\\s*on\\s*light\\s*$",
      "^\\s*enlight\\s*(?P<group0>%ROOM%)\\s*$",
      "^\\s*i\\s*need\\s*light\\s*in\\s*(?P<group0>%ROOM%)\\s*$",
      "^\\s*put\\s*lights\\s*in\\s*(?P<group0>%ROOM%)\\s*$",
      "^\\s*turn\\s*on\\s*lights\\s*in\\s*(?P<group0>%ROOM%)\\s*$"
    ]
  },
  "slot_names_to_entities": {
    "sampleGetWeather": {
      "weatherDate": "snips/datetime",
      "weatherLocation": "location"
    },
    "sampleTurnOnLight": {
      "room": "room"
    }
  }
}